- title('Home')
- stylesheet 'map'
- stylesheet 'home'

- if user_signed_in?
  - if @checkins.try(:any?)
    - javascript "http://maps.google.com/maps?file=api&v=2&key=#{GOOGLE_MAPS_KEY}"
    - javascript 'mapiconmaker', 'markermanager'
    - javascript 'jquery.metadata'
    - javascript 'jquery.jmapping.min'
    - javascript 'stream'

- content_for :mat do
  .span-23.last.padding-bottom-10
    .span-3
      %h2 Outlately
    .span-13{:style => 'margin-top: 10px;'}
      - if @cities
        = render(:partial => 'home/playgrounds', :locals => {:cities => @cities.sort, :geo => @geo})
    .span-7.last
      = render(:partial => 'shared/oauth_links')

%hr.space

.span.24.last
  = display_flash(:all)
  = display_alerts

- if !user_signed_in?
  .span-23.prepend-1.last
    -# always sign in with facebook
    %span{:style => 'font-size: 1.5em;'}Sign in
    %br
    = link_to image_tag('facebook_64.png'), user_oauth_authorize_url(:facebook)

- if user_signed_in?
  .span-23.prepend-1.last#suggestions
    - if @user.suggestions.active.count > 0
      %h3= link_to I18n.t('home.suggestions.title'), suggestions_path, :style => 'color: #0000BB;'
    - else
      %h3== No suggestions at the moment, but we're working on it.

  -# home streams list
  .span-23.prepend-1.last
    .span-13
      %h4
        %span.bold{:style => 'font-size: 1.5em;'}= I18n.t('home.stream.title')
        -# allow selection between different streams
        %span#stream_list{:style => 'padding-left: 5px; font-size: 0.9em;'}
          %span.stream_title Streams:
          - @streams.each do |stream_name|
            -# check if this is the current stream
            - if stream_name.split.first.downcase == @stream
              %span.stream_name.current= stream_name
            - else
              %span.stream_name= link_to stream_name, home_stream_path(:name => stream_name.parameterize), :class => 'admin', :id => stream_name.downcase.parameterize, :method => :put
    .span-10.last
      %h4.bold{:style => 'font-size: 1.5em;'}= I18n.t('home.map.title')

  .span-23.prepend-1.last
    .span-13.stream{:id => @stream.downcase}
      - @checkins.sort_by{ rand }.each do |object|
        - case object.class.to_s.downcase
        - when 'checkin'
          = render(:partial => 'home/checkin', :locals => {:checkin => object})
        - when 'location'
          = render(:partial => 'home/location', :locals => {:location => object})
        - when 'user'
          = render(:partial => 'home/user', :locals => {:user => object})

    .span-10.last
      .span-10.last#map
      .span-10.last#map-side-bar.hide
        = render(:partial => 'locations/locations_map', :locals => {:locations => @checkins.collect(&:location)})

= render(:partial => 'home/meet_user_dialog')
-#= render(:partial => 'home/plan_location_dialog')

:javascript
  var growls             = #{@growls};
  var mapping            = #{user_signed_in?};
  var max_locations      = #{@max_objects || 0};
  var geo_checkins_path  = "/users/#{@user.try(:id)}/checkins/geo:#{@geo.try(:lat).to_f}..#{@geo.try(:lng).to_f}/radius:#{@radius.to_i}/#{@stream}"
