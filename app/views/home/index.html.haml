- title('Home')
- stylesheet 'map'
- stylesheet 'home'
- stylesheet 'growl'

- if user_signed_in?
  - if @checkins.try(:any?)
    - javascript "http://maps.google.com/maps?file=api&v=2&key=#{GOOGLE_MAPS_KEY}"
    - javascript 'mapiconmaker', 'markermanager'
    - javascript 'jquery.metadata'
    - javascript 'jquery.jmapping.min'
    - javascript 'stream'

- content_for :mat do
  %h2== Outlately
  %h4= render(:partial => 'shared/oauth_links')

%hr.space

.span.24.last
  = display_flash(:all)
  = display_alerts

- if !user_signed_in?
  .span-23.prepend-1.last
    %h3
      -# always sign in with facebook
      == Try the beta by signing in with your
      = link_to 'Facebook account', user_oauth_authorize_url(:facebook), :class => 'admin'

- if user_signed_in?
  .span-23.prepend-1.last#suggestions
    - if current_user.suggestions.active.count > 0
      %h3= link_to I18n.t('home.suggestions.title'), suggestions_path, :style => 'color: #0000BB;'
    - else
      %h3== No suggestions at the moment, but we're working on it.

  -# column titles
  .span-23.prepend-1.last
    .span-13
      %h4
        %span.bold{:style => 'font-size: 1.5em;'}= I18n.t('home.stream.title')
        -# allow selection between different streams
        %span#other_streams{:style => 'padding-left: 5px; font-size: 0.9em;'}
          - ['My Stream', 'Friends Stream', 'Daters Stream'].each do |stream_name|
            -# check if this is the current stream
            - if stream_name.split.first.downcase == @stream
              %span.stream_name{:style => 'padding-right: 3px;'}= stream_name
            - else
              %span.stream_name{:style => 'padding-right: 3px;'}= link_to stream_name, home_stream_path(:name => stream_name.parameterize), :class => 'admin', :id => stream_name.downcase.parameterize, :method => :put
    .span-10.last
      %h4.bold{:style => 'font-size: 1.5em;'}= I18n.t('home.map.title')

  .span-23.prepend-1.last
    .span-13.stream
      - @checkins.sort_by{ rand }.each do |object|
        - case object.class.to_s.downcase
        - when 'checkin'
          = render(:partial => 'home/checkin', :locals => {:checkin => object})
        - when 'location'
          = render(:partial => 'home/location', :locals => {:location => object})
        - when 'user'
          = render(:partial => 'home/user', :locals => {:user => object})

    .span-10.last
      .span-10.last#map
      .span-10.last#map-side-bar.hide
        = render(:partial => 'locations/locations_map', :locals => {:locations => @checkins.collect(&:location)})

= render(:partial => 'home/meet_user_dialog')
-#= render(:partial => 'home/plan_location_dialog')

:javascript
  var growls             = #{@growls};
  var mapping            = #{user_signed_in?};
  var max_locations      = #{@max_objects || 0};
  var geo_checkins_path  = "/users/#{current_user.try(:id)}/checkins/geo:#{current_user.try(:lat).to_f}..#{current_user.try(:lng).to_f}/radius:#{current_user.try(:radius)}/#{@stream}"
