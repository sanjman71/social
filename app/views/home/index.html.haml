- title('Home')
- stylesheet 'map'
- stylesheet 'home'
- stylesheet 'growl'

- if user_signed_in?
  - if @locations.try(:any?)
    - javascript "http://maps.google.com/maps?file=api&v=2&key=#{GOOGLE_MAPS_KEY}"
    - javascript 'mapiconmaker', 'markermanager'
    - javascript 'jquery.metadata'
    - javascript 'jquery.jmapping.min'
    - javascript 'stream'

- content_for :mat do
  %h2== Outlately
  %h4= render(:partial => 'shared/oauth_links')

%hr.space

.span.24.last
  = display_flash(:all)
  = display_alerts

- if !user_signed_in?
  .span-23.prepend-1.last
    %h3
      -# always sign in with facebook
      == Try the beta by signing in with your
      = link_to 'Facebook account', user_oauth_authorize_url(:facebook), :class => 'admin'

- if user_signed_in?
  .span-23.prepend-1.last#suggestions
    - if current_user.suggestions.active.count > 0
      %h3= link_to I18n.t('home.suggestions.title'), suggestions_path, :style => 'color: #0000BB;'
    - else
      %h3== No suggestions at the moment, but we're working on it.

  -# column titles
  .span-23.prepend-1.last
    .span-13
      %h4.bold{:style => 'font-size: 1.5em;'}= I18n.t('home.stream.title')
    .span-10.last
      %h4.bold{:style => 'font-size: 1.5em;'}= I18n.t('home.map.title')

  .span-23.prepend-1.last
    .span-13.stream
      - (@matches+@locations).sort_by{ rand }.each do |object|
        - case object.class.to_s.downcase
        - when 'location'
          = render(:partial => 'home/location', :locals => {:location => object})
        - when 'user'
          = render(:partial => 'home/user', :locals => {:user => object})

    .span-10.last
      .span-10.last#map
      .span-10.last#map-side-bar.hide
        = render(:partial => 'locations/locations_map', :locals => {:locations => @locations})

= render(:partial => 'home/meet_user_dialog')
-#= render(:partial => 'home/plan_location_dialog')

:javascript
  var growls             = #{@growls};
  var mapping            = #{user_signed_in?};
  var cur_locations      = #{@locations ? [@locations.collect(&:id).sort.join(',')] : []};
  var cur_users          = #{@users ? [@users.collect(&:id).sort.join(',')] : []};
  var max_locations      = #{@max_objects || 0};
  var geo_locations_path = "/locations/geo:#{current_user.try(:lat).to_f}..#{current_user.try(:lng).to_f}/radius:#{current_user.try(:radius)}"
  var geo_users_path     = "/users/geo:#{current_user.try(:lat).to_f}..#{current_user.try(:lng).to_f}/radius:#{current_user.try(:radius)}"
